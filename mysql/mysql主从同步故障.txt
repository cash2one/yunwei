

mysql 主从不同步处理：
    不同步的原因有很多(如:空间不足,id一致,单个表问题...)
    这些信息基本都可以在slave status 可以看得到错误提示(具体情况具体分析).

    #因为数据库故障不好模拟(目前想到只有删掉表)
    
    这里也采用一般的做法：(具体命令就不敲了,讲一下大概思路)
    一：对数据要求不是很严格的做法
        直接进行再次同步使其同步
        1.停止从库slave stop；
        2.看主库master status得到postion 
        3.在进行同步。

        总结：这使得从库有部分数据与主库不一致。



    二：对数据同步要求比较严格：
        重新完整同步
        第一种：
        1.删掉从库数据库 
        2.停主库或者加锁(lock)让其只读(不可写)
        3.对主库进行完整备份---show master status  得到postion
        4.开启主库或解锁(unlock)
        5.将备份文件考入从库中
        6.再次今天同步(已知postion)
        
        总结：这种方法会耗比较长的时间和业务的停止,但可以保证从库与主库数据是一致的。
        
        第二种：
        1.删除从库
        2.停止主库
        3.对主库整个数据目录进行打包压缩
        4.开启主库查看master status
        4.传送至从库进行解压
        5.开启从库
        6.重置从库 reset slave
        7.进行同步
        
        总结：这种做法比较少见,也可以完成同步相对上一种思路比较简单


        第三种：达到不停主库的做法
        网上的资料还不是很多,测试过小量数据 使用：innobackupex
        1.停掉从库
        2.删除从库
        3.使用innobackupex 将其打包至一个备份目录
        4.传至从库目录中并修改权限
        5.启动从库
        6.查看 xtrabackup_binlog_info 查看postion(打包的时候生成)
        7.进行同步

        总结：这种对比innodb数据比较有效,对于myisam 会有锁表操作,对于数据量比较大锁表时间会增加





mysql表故障
    错误种类也比较多,通常用的是mysql自带的修改工具(网上总结一些常见的,个人也只遇到一例)
    1.使用 repair table 
    2.如果是myisam
        2.1 myisamchk -r -q xx.MYI

        2.2 直接从从库考表的3个文件(如果有从库的话)未尝试


mysql 恢复
	讲到恢复先谈一谈备份(方式也有很多,掌握不够全)网上参考一下

	方式1：根据是否需要数据库离线(在主从同步有讲)
	冷备:需要关mysql服务,读写请求均不允许状态下进行；
	温备:服务在线，但仅支持读请求,不允许写请求；
	热备:备份的同时,业务不受影响。

    方式2：备份策略
       完整备份
       增量备份

    
    第一种方式恢复：
        主从同步有提到差不多的

    第二种方式恢复：
        完整备份+增加备份
        
        完整备份(每周备份,每天备份...)
        增量备份就需要开启二进制日志了(bin-log)

        这种大概思路讲一下：
        我的理解操作过程：
        1.首次进行完整配置的时候,不管是冷备还是热备都要记录postion信息
        2.把二进制拷贝只从数据库进行转换为sql语句
        	mysqlbinlog 用法有很多(可以定位时间)
        	命令：mysqlbinlog logbin.xxx  > xxx.sql(文件多则追加>>)

        3.因为一开始找到了起始postion 导入的时候只需要指定开始postion位置即可
        	1：sql导入(需转化)
        	2：binlog
        	例如：
        	mysqlbinlog --start-position=xxx --stop-position=xxx logbin.xxx | mysql -u root -p 
        4.导完sql文件最后也会有postion信息 记录已以供下次传入进来的bin-log日志  

        

mysql回档：
    回到某个时间点
    1.按照游戏经验来看：一贯作风是每几个小时进行全备(一般slave上进行),回档时按全备进行恢复。
      总结：比较方便,缺点就是不能按某个点恢复
    2.按照bin-log恢复：
       1.首先也是要有全备
       2.记录postion信息
       3.把生成的bin-log 都进行保存
       4.恢复的时候,也是将全备导入
       5.导入bin-log,已知起始poston值,保存的bin-log文件就可以指定stop-postion或者时间进行恢复

    总结：比较繁琐,要一直保存bin-log文件




//
当然以上可能还有很多方法,由于技术+对mysql了解有限(在工作中出现的故障情况也十分少).
也是通过自己的理解和一些小数据的模拟才写出这份文档
